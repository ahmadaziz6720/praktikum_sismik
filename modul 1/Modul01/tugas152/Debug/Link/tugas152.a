;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void main(void){
; 0000 0016 void main(void){

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0017 DDRD = 0xFF; //Assign DDR mode PIN D menjadi OUTPUT
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0018 DDRB = 0x00; //Assign DDR mode PIN B untuk button
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0019 UCSR0B = 0x00; //Unable Comm Serial untuk RX TX
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001A i = 0x01; //inisilasasi led mulai dari 1
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001B PVPINB= PINB.1; //untuk melihat status button sebelumnya
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001C 
; 0000 001D //Kondisi : push button low ke high (on), tugas151, button harus ditahan, meskipun sudah tidak dipush,
; 0000 001E //harus tetap menyala sampai tidak sesuai dengan previous button
; 0000 001F while (1) {
;PCODE: $0000001A VOL: 0
; 0000 0020 
; 0000 0021 if (!(PINB.1)) {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0022 delay_ms(100);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0023 PORTD = (1 << i);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0024 i++;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0025 if (i > 7) {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0026 i = 0;
;PCODE: $0000002B VOL: 0
; 0000 0027 }
; 0000 0028 while ((PINB.1)) {};
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0029 }
; 0000 002A 
; 0000 002B }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002C }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
