;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void init_int(void) {
; 0000 0012 void init_int(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0013 //set prescaler 1024
; 0000 0014 TCCR1B |= (1<<CS12) | (1<<CS10);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0015 TIMSK1 |= (1<<TOIE1);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0016 
; 0000 0017 TCNT1H = TCNT_HIGH;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0018 TCNT1L = TCNT_LOW;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0019 
; 0000 001A // Enable Interrupt
; 0000 001B #asm("sei")
;PCODE: $00000019 VOL: 0
; 0000 001C }
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;interrupt [14] void timer1_ovf_isr(void) {
; 0000 001E interrupt [14] void timer1_ovf_isr(void) {
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001F TCNT1H = TCNT_HIGH;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0020 TCNT1L = TCNT_LOW;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0021 }
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;void Delay(void) {
; 0000 0023 void Delay(void) {
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0024 unsigned char i;
; 0000 0025 for (i=0; i<100; i++) {
;PCODE: $00000027 VOL: 0
;	i -> R17
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0026 delay_ms(1);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0027 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0028 }
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;void main(void) {
; 0000 002A void main(void) {
;PCODE: $0000003C VOL: 0
; 0000 002B LED_INIT;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002C init_int();
;PCODE: $0000003F VOL: 0
; 0000 002D while (1) {
;PCODE: $00000040 VOL: 0
; 0000 002E LED_state = !LED_state;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 002F if (LED_state) {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0030 LED_ON;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0031 } else {
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0032 LED_OFF;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0033 }
;PCODE: $0000004C VOL: 0
; 0000 0034 Delay();
;PCODE: $0000004D VOL: 0
; 0000 0035 }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0036 }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
